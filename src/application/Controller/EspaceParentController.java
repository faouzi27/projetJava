/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application.Controller;

/**
 *
 * @author acer
 */


import java.io.IOException;
import java.net.URL;
import java.util.LinkedList;
import java.util.ResourceBundle;

import application.Entity.User;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TableView;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.input.MouseEvent;

import javafx.scene.layout.BorderPane;
import javafx.stage.Stage;
import javafx.stage.Window;
import javafx.stage.WindowEvent;

import java.util.Properties;

import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
public class EspaceParentController implements Initializable {

    ConnectionEcole pc=new ConnectionEcole();
	
		User u=new User();
	
	// parentlabel.setText(stage.getTitle().toString());
	 
	@FXML
	private BorderPane bp1;

	private TextField UsEmail;
	private PasswordField PassEmail;
	private TextField SujetTX;
	private TextArea EmailCont;


	
	@FXML
	private Button Emploitbu;
	@FXML
	private Button Absencebu;
	@FXML
	private Button GarderieBu;
	@FXML
	private Button ContacterBu;
	@FXML
	private Button Notebu;
	

	public String ff;
	public String g;
	public ObservableList optionsCombo1=pc.affappcom(String.valueOf(u.getId()));
	
	
	
	private ComboBox ApprennantCombNote;
	private ComboBox AbsenceComb;
	private ComboBox GarderieComb;
	
	
	@FXML
	private Label welcParent;
	@FXML
	private Button Deconnection;
public String idx;


	// Event Listener on Button[#telech].onAction
	public void telech(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#CompteParent].onAction
	public void CompteParent(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#Deconnection].onAction
	@FXML
	public void Deconnection(ActionEvent event) {
		((Node) event.getSource()).getScene().getWindow().hide();
		BorderPane root;
		try {
			root = (BorderPane)FXMLLoader.load(getClass().getResource("../UI/Home.fxml"));
			Scene scene = new Scene(root);
			Stage stage=new Stage();
			stage.setScene(scene);
			stage.show();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	// Event Listener on Button[#ContacterBu].onMouseClicked
	@FXML
	public void Contacter(MouseEvent event) {
		looad("Contacter");
		
		
		
 
	}
	
	// Event Listener on Button[#Emploitbu].onMouseClicked
		@FXML
		public void Classe(MouseEvent event) {
			looad("Emploit");
		
		}
	
	
	// Event Listener on Button[#Absencebu].onMouseClicked
	@FXML
	public void Absence(MouseEvent event) {
		looad("Absence");
		
		
	}
	// Event Listener on Button[#GarderieBu].onMouseClicked
	@FXML
	public void Garderie(MouseEvent event) {
		looad("Garderie");
		
		
	}
	
	
	// Event Listener on Button[#ValiderBu].onMouseClicked
	public void Valider(MouseEvent event) {
		
	}
	
	// Event Listener on ComboBox[#AbsenceComb].onMouseEntered
	public void AbsenceComb(MouseEvent event) {
		 Stage stage = (Stage)((Node) event.getSource()).getScene().getWindow();
			
		 
		 u=pc.user(Integer.parseInt(stage.getTitle().toString()));
		
		
		String id=String.valueOf(u.getId());
		System.out.println(id);
		ObservableList	optionsCombo2;
		optionsCombo2= pc.affappcom(id);
                AbsenceComb.setItems(optionsCombo2);
	
		
	}
	
	// Event Listener on ComboBox[#GarderieComb].onMouseEntered
		public void GarderieComb(MouseEvent event) {
			
			Stage stage = (Stage)((Node) event.getSource()).getScene().getWindow();
				
			 
			 u=pc.user(Integer.parseInt(stage.getTitle().toString()));
			
			
			String id=String.valueOf(u.getId());
			System.out.println(id);
			ObservableList	optionsCombo2;
			optionsCombo2= pc.affappcom(id);
			GarderieComb.setItems(optionsCombo2);
		}
		
		// Event Listener on ComboBox[#ApprennantCombNote].onMouseEntered
		public void ApprennantCombNote(MouseEvent event) {
			Stage stage = (Stage)((Node) event.getSource()).getScene().getWindow();
				
			 
			 u=pc.user(Integer.parseInt(stage.getTitle().toString()));
			
			
			String id=String.valueOf(u.getId());
			System.out.println(id);
			ObservableList	optionsCombo2;
			optionsCombo2= pc.affappcom(id);
			ApprennantCombNote.setItems(optionsCombo2);
		}
		
	
	
	
	
	// Event Listener on Button[#Notebu].onMouseClicked
	@FXML
	public void Note(MouseEvent event) {
		looad("Note");
		

	}

	// Event Listener on BorderPane[#bp1].onMouseEntered
	@FXML
	public void getidfromtitle(MouseEvent event) {

		 Stage stage = (Stage)((Node) event.getSource()).getScene().getWindow();
		
		 
		 u=pc.user(Integer.parseInt(stage.getTitle().toString()));
		 welcParent.setText(u.getUsername()+"  "+u.getPrenom());
		 
		 
	}
	
	@Override
	public void initialize(URL location, ResourceBundle resources) {
		
		String location1=location.toString();
		System.out.println(location1);
		String	ffx=location1.substring(location1.lastIndexOf("/")+1, location1.length());
		
	System.out.println(ffx);
		
		
		
	}
	
	
	public void validerAbsenceParen(ActionEvent event) {

	}
	public void validerNoteParen(ActionEvent event) {

	}
	
	
	
	
	public void Envoyer(ActionEvent event) {
		test();
	}
	 private void looad(String page) {
			Parent root=null;
			try {
				root=FXMLLoader.load(getClass().getResource("../UI/"+page+"Parent.fxml"));
			} catch (IOException e) {
				e.printStackTrace();
			}
			bp1.setCenter(root);
			
		}
		
	 
	
		
	  

	 
	
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   
	   public void test(){
		   final String username = UsEmail.getText();
		   final String password = PassEmail.getText();
	
	        Properties prop = new Properties();
			prop.put("mail.smtp.host", "smtp.gmail.com");
	        prop.put("mail.smtp.port", "587");
	        prop.put("mail.smtp.auth", "true");
	        prop.put("mail.smtp.starttls.enable", "true"); //TLS
	        
	        Session session = Session.getInstance(prop,
	                new javax.mail.Authenticator() {
	                    protected PasswordAuthentication getPasswordAuthentication() {
	                        return new PasswordAuthentication(username, password);
	                    }
	                });

	        try {

	            Message message = new MimeMessage(session);
	            message.setFrom(new InternetAddress(UsEmail.getText()));
	            message.setRecipients(
	                    Message.RecipientType.TO,
	                    InternetAddress.parse("edsmart1997@gmail.com")
	            );
	            message.setSubject(SujetTX.getText());
	            message.setText(EmailCont.getText());

	            Transport.send(message);

	            System.out.println("Done");

	        } catch (MessagingException e) {
	            e.printStackTrace();
	        }
	    }
		}
	   
	   
	   
	   
	 

